From 25bcaa4f2cc6cbdae4a02b581e65589938377397 Mon Sep 17 00:00:00 2001
From: Ben Zimmerman <benz@spideroak.com>
Date: Wed, 4 Apr 2012 13:44:48 -0500
Subject: [PATCH] Fixed url truncation bug

---
 lib/account_mgr/accounts_api.py |   29 +++++++++++++++--------------
 lib/account_mgr/api_client.py   |    2 +-
 2 files changed, 16 insertions(+), 15 deletions(-)
 create mode 100644 lib/__init__.py

diff --git a/lib/__init__.py b/lib/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/lib/account_mgr/accounts_api.py b/lib/account_mgr/accounts_api.py
index c1d9bca..b3880d2 100644
--- a/lib/account_mgr/accounts_api.py
+++ b/lib/account_mgr/accounts_api.py
@@ -1,7 +1,7 @@
 import json
 import urllib2
 
-from .api_client import ApiClient
+from api_client import ApiClient
 
 
 class Api(object):
@@ -41,16 +41,16 @@ class Api(object):
     ### Features
 
     def enterprise_features(self):
-        return self.client.get_json('/partner/features')
+        return self.client.get_json('partner/features')
 
     ### Settings
 
     def enterprise_settings(self):
-        return self.client.get_json('/partner/settings')
+        return self.client.get_json('partner/settings')
 
     def update_enterprise_settings(self, settings):
         try:
-            return self.client.post_json('/partner/settings', settings)
+            return self.client.post_json('partner/settings', settings)
         except urllib2.HTTPError, err:
             if err.code == 400:
                 raise self.BadParams()
@@ -59,12 +59,12 @@ class Api(object):
     ### Groups
 
     def list_groups(self):
-        return self.client.get_json('/groups/')
+        return self.client.get_json('groups/')
 
     def create_group(self, group_info):
         try:
             resp = self.client.post_json_raw_response(
-                '/groups/', group_info)
+                'groups/', group_info)
         except urllib2.HTTPError, err:
             if err.code == 400:
                 raise self.BadParams()
@@ -79,7 +79,7 @@ class Api(object):
 
     def get_group(self, group_id):
         try:
-            return self.client.get_json('/groups/%d' % (group_id,))
+            return self.client.get_json('groups/%d' % (group_id,))
         except urllib2.HTTPError, err:
             if err.code == 404:
                 raise self.NotFound()
@@ -87,7 +87,7 @@ class Api(object):
 
     def edit_group(self, group_id, group_info):
         try:
-            self.client.post_json('/groups/%d' % (group_id,), group_info)
+            self.client.post_json('groups/%d' % (group_id,), group_info)
         except urllib2.HTTPError, err:
             if err.code == 404:
                 raise self.NotFound()
@@ -105,7 +105,7 @@ class Api(object):
 
     def delete_group(self, group_id):
         try:
-            self.client.delete('/groups/%d' % (group_id,))
+            self.client.delete('groups/%d' % (group_id,))
         except urllib2.HTTPError, err:
             if err.code == 404:
                 raise self.NotFound()
@@ -114,11 +114,11 @@ class Api(object):
     ### Users
 
     def list_users(self):
-        return self.client.get_json('/users/')
+        return self.client.get_json('users/')
 
     def create_user(self, user_info):
         try:
-            return self.client.post_json('/users/', user_info)
+            return self.client.post_json('users/', user_info)
         except urllib2.HTTPError, err:
             if err.code == 400:
                 raise self.BadParams()
@@ -137,7 +137,7 @@ class Api(object):
     def get_user(self, username_or_email):
         try:
             return self.client.get_json(
-                '/users/%s' % (username_or_email,))
+                'users/%s' % (username_or_email,))
         except urllib2.HTTPError, err:
             if err.code == 404:
                 raise self.NotFound()
@@ -146,7 +146,7 @@ class Api(object):
     def edit_user(self, username_or_email, user_info):
         try:
             self.client.post_json(
-                '/users/%s' % (username_or_email,), user_info)
+                'users/%s' % (username_or_email,), user_info)
         except urllib2.HTTPError, err:
             if err.code == 404:
                 raise self.NotFound()
@@ -166,8 +166,9 @@ class Api(object):
 
     def delete_user(self, username_or_email):
         try:
-            self.client.delete('/users/%s' % (username_or_email,))
+            self.client.delete('users/%s' % (username_or_email,))
         except urllib2.HTTPError, err:
             if err.code == 404:
                 raise self.NotFound()
             raise
+
diff --git a/lib/account_mgr/api_client.py b/lib/account_mgr/api_client.py
index 84b1551..4807dfb 100644
--- a/lib/account_mgr/api_client.py
+++ b/lib/account_mgr/api_client.py
@@ -2,7 +2,7 @@ import json
 import urllib2
 from urlparse import urljoin
 
-from Pandora.https import VerifiedHTTPSHandler
+from lib.Pandora.https import VerifiedHTTPSHandler
 
 
 _DEFAULT_HANDLERS = [
-- 
1.7.4.2

